import json
import requests
import os

def lambda_handler(event, context):
    """
    PURPOSE:
    1. Listen for "CSV files are Ready" callback event.
    2. Get List of CSVs, then trigger the 'converter' for each of them.

    INPUTS:
    - accountId: The account ID associated with the Data Connector request.
    - requestId: The request ID generated by the Data Connector.
    - jobId: The job ID for the data export job.
    - success: A boolean indicating if the job was successful or not.
    
    SAMPLE GET Request:
    curl -X GET 'https://your-api-endpoint.amazonaws.com/prod/lambda_handler' \
    -H 'Content-Type: application/json' \
    -d '{
        "accountId": "your_account_id",
        "requestId": "your_request_id",
        "jobId": "your_job_id",
        "success": true
    }'
    """
    
    # Extract callback data from the event
    account_id = event.get('accountId')
    request_id = event.get('requestId')
    job_id = event.get('jobId')
    success = event.get('success')

    # If success is false, return an error message
    if not success:
        return {
            'statusCode': 500,
            'body': json.dumps({'error': 'Job failed'})
        }
    
    # Set up the authorization token (assumed to be passed as env variable)
    auth_token = os.getenv('AUTH_TOKEN')
    
    # Step 1: Retrieve list of CSV files using Example A
    data_listing_url = f'https://developer.api.autodesk.com/data-connector/v1/accounts/{account_id}/jobs/{job_id}/data-listing'
    headers = {
        'Authorization': f'Bearer {auth_token}'
    }
    
    # Fetch the list of files
    response = requests.get(data_listing_url, headers=headers)
    
    if response.status_code != 200:
        return {
            'statusCode': 500,
            'body': json.dumps({'error': 'Failed to retrieve CSV listing'})
        }
    
    # Filter the files to get only CSVs
    data_files = response.json()
    csv_files = [file for file in data_files if file['name'].endswith('.csv')]

    # Step 2: For each CSV file, get its signed URL using Example B
    signed_urls = []

    for csv_file in csv_files:
        file_name = csv_file['name']
        file_url = f'https://developer.api.autodesk.com/data-connector/v1/accounts/{account_id}/jobs/{job_id}/data/{file_name}'

        file_response = requests.get(file_url, headers=headers)
        
        if file_response.status_code == 200:
            signed_data = file_response.json()
            signed_urls.append({
                'name': signed_data['name'],
                'signedUrl': signed_data['signedUrl']
            })
    
    # Return the list of signed URLs
    return {
        'statusCode': 200,
        'body': json.dumps(signed_urls)
    }